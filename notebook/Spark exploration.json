{
	"name": "Spark exploration",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "romandp203spark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fcac2487-08e2-45bd-9e2d-f1d3d77e5351"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e7fb6279-2ac9-42d6-9620-f4f2a25c1a12/resourceGroups/BD-SparkSandbox/providers/Microsoft.Synapse/workspaces/training-bd-cert/bigDataPools/romandp203spark",
				"name": "romandp203spark",
				"type": "Spark",
				"endpoint": "https://training-bd-cert.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/romandp203spark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"orderSchema = StructType([\r\n",
					"    StructField(\"SalesOrderNumber\", StringType()),\r\n",
					"    StructField(\"SalesOrderLineNumber\", IntegerType()),\r\n",
					"    StructField(\"OrderDate\", DateType()),\r\n",
					"    StructField(\"CustomerName\", StringType()),\r\n",
					"    StructField(\"Email\", StringType()),\r\n",
					"    StructField(\"Item\", StringType()),\r\n",
					"    StructField(\"Quantity\", IntegerType()),\r\n",
					"    StructField(\"UnitPrice\", FloatType()),\r\n",
					"    StructField(\"Tax\", FloatType())\r\n",
					"    ])\r\n",
					"\r\n",
					"df = spark.read.load(\r\n",
					"    'abfss://files@romandp203.dfs.core.windows.net/sales/orders/*.csv',\r\n",
					"    format='csv',\r\n",
					"    schema=orderSchema\r\n",
					")\r\n",
					"display(df.limit(100))"
				],
				"execution_count": 51
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.printSchema()"
				],
				"execution_count": 52
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df.toPandas())"
				],
				"execution_count": 53
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"customers = df['CustomerName', 'Email']\r\n",
					"print(customers.count())\r\n",
					"print(customers.distinct().count())\r\n",
					"display(customers.distinct())"
				],
				"execution_count": 54
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"customers = df.select(\"CustomerName\", \"Email\").where(df['Item']=='Road-250 Red, 52')\r\n",
					"print(customers.count())\r\n",
					"print(customers.distinct().count())\r\n",
					"display(customers.distinct())"
				],
				"execution_count": 55
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"productSales = df.select(\"Item\", \"Quantity\").groupBy(\"Item\").sum()\r\n",
					"display(productSales)"
				],
				"execution_count": 56
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"yearlySales = df.select(year(\"OrderDate\").alias(\"Year\")).groupBy(\"Year\").count().orderBy(\"Year\")\r\n",
					"display(yearlySales)"
				],
				"execution_count": 57
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df.createOrReplaceTempView(\"salesorders\")\r\n",
					"spark_df = spark.sql(\"SELECT * FROM salesorders\")\r\n",
					"display(spark_df)"
				],
				"execution_count": 58
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT YEAR(OrderDate) AS OrderYear,\r\n",
					"       SUM((UnitPrice * Quantity) + Tax) AS GrossRevenue\r\n",
					"FROM salesorders\r\n",
					"GROUP BY YEAR(OrderDate)\r\n",
					"ORDER BY OrderYear;"
				],
				"execution_count": 59
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT * FROM salesorders"
				],
				"execution_count": 60
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sqlQuery = \"SELECT CAST(YEAR(OrderDate) AS CHAR(4)) AS OrderYear, \\\r\n",
					"                SUM((UnitPrice * Quantity) + Tax) AS GrossRevenue \\\r\n",
					"            FROM salesorders \\\r\n",
					"            GROUP BY CAST(YEAR(OrderDate) AS CHAR(4)) \\\r\n",
					"            ORDER BY OrderYear\"\r\n",
					"df_spark = spark.sql(sqlQuery)\r\n",
					"df_spark.show()"
				],
				"execution_count": 61
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from matplotlib import pyplot as plt\r\n",
					"\r\n",
					"df_sales = df_spark.toPandas()\r\n",
					"\r\n",
					"fig, ax = plt.subplots(1, 2, figsize = (10,4))\r\n",
					"\r\n",
					"ax[0].bar(df_sales[\"OrderYear\"], df_sales[\"GrossRevenue\"], color=\"orange\")\r\n",
					"ax[0].set_title('Revenue by Year')\r\n",
					"\r\n",
					"yearly_counts = df_sales['OrderYear'].value_counts()\r\n",
					"ax[1].pie(yearly_counts)\r\n",
					"ax[1].set_title('Orders per Year')\r\n",
					"ax[1].legend(yearly_counts.keys().tolist())\r\n",
					"\r\n",
					"fig.suptitle('Sales Data')\r\n",
					"\r\n",
					"ax[0].set_title(\"Revenue by year\")\r\n",
					"ax[0].set_xlabel(\"Year\")\r\n",
					"ax[0].set_ylabel(\"Revenue\")"
				],
				"execution_count": 62
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import seaborn as sns\r\n",
					"\r\n",
					"sns.set_theme(style=\"whitegrid\")\r\n",
					"ax = sns.lineplot(x=\"OrderYear\", y=\"GrossRevenue\", data=df_sales)\r\n",
					"plt.show()"
				],
				"execution_count": 63
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}